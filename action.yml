name: "jacoco-filter"
description: "Filter JaCoCo XML reports and update coverage counters using rule-based exclusion."
author: "Miroslav Pojer"

inputs:
  config:
    description: "Path to the TOML config file (e.g., jacoco_filter.toml)"
    required: false
  inputs:
    description: "Glob patterns or paths to JaCoCo XML files"
    required: false
  exclude-paths:
    description: "Glob patterns to exclude from input files"
    required: false
  rules:
    description: "Path to the filter rules file"
    required: false
  verbose:
    description: "Enable verbose logging"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Check Python version and install dependencies
      run: |
        python_version=$(python --version 2>&1 | grep -oP '\d+\.\d+\.\d+')
        min_version="3.12.0"

        version() { echo "$@" | awk -F. '{ printf("%d%03d%03d\n", $1,$2,$3); }'; }

        echo "Python: $python_version, Required: $min_version"

        if [ $(version $python_version) -lt $(version $min_version) ]; then
          echo "Python version must be >= $min_version"
          exit 1
        fi

        python -m venv .venv
        source .venv/bin/activate
        pip install --upgrade pip
        pip install -r "${{ github.action_path }}/requirements.txt"
      shell: bash

    - name: Run jacoco-filter
      shell: bash
      run: |
        source .venv/bin/activate
        
        args=()
        
        if [[ "${{ inputs.config }}" != "" ]]; then
          args+=(--config "${{ inputs.config }}")
        fi
        
        if [[ "${{ inputs.inputs }}" != "" ]]; then
          args+=(--inputs ${{ inputs.inputs }})
        fi
        
        if [[ "${{ inputs.exclude-paths }}" != "" ]]; then
          args+=(--exclude-paths ${{ inputs.exclude-paths }})
        fi
        
        if [[ "${{ inputs.rules }}" != "" ]]; then
          args+=(--rules "${{ inputs.rules }}")
        fi
        
        if [[ "${{ inputs.verbose }}" == "true" ]]; then
          args+=(--verbose)
        fi
        
        echo "Running with args: ${args[@]}"
        python "${{ github.action_path }}/run_filter.py" "${args[@]}"

branding:
  icon: "filter"
  color: "blue"
